apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'com.google.firebase.crashlytics'
apply from: "../utils.gradle"
apply plugin: 'com.google.firebase.firebase-perf'


android {
    compileSdkVersion build_versions.compile_sdk
    defaultConfig {
        applicationId build_versions.app_id
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        versionCode getVersionCode(build_variants.major, build_variants.minor, build_variants.patch, build_variants.build)
        versionName getVersionName(build_variants.major, build_variants.minor, build_variants.patch)
        testInstrumentationRunner deps.androidx.test_runner
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOGS", "true"
            buildConfigField "boolean", "DEV_ENVIRONMENT", "true"

            zipAlignEnabled true
            //minifyEnabled true
            //shrinkResources true
            //proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"

            resValue "string", "google_maps_key", (project.findProperty("GOOGLE_MAPS_API_KEY") ?: "")
            versionNameSuffix "-debug"
        }

        release {
            buildConfigField "boolean", "LOGS", "false"
            buildConfigField "boolean", "DEV_ENVIRONMENT", "false"

            zipAlignEnabled true
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            resValue "string", "google_maps_key", (project.findProperty("GOOGLE_MAPS_API_KEY") ?: "")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    androidExtensions {
        experimental = true
    }

    applicationVariants.all {
        variant ->
            if (variant.buildType.name == "release") {
                renameArtifact(build_versions.app_name, variant)
            }
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // Kotlin
    implementation deps.kotlin.stdlib
    //implementation deps.kotlin.ktx
    // Google
    implementation deps.google.material
    implementation deps.google.map
    implementation deps.google.guava
    // AndroidX Foundation
    implementation deps.androidx.core
    implementation deps.androidx.legacy
    implementation deps.androidx.futures
    implementation deps.androidx.vector
    implementation deps.androidx.constraint
    implementation deps.androidx.viewpager
    implementation deps.androidx.emoji
    implementation deps.androidx.preferences
    implementation deps.androidx.recyclerview
    // Activity
    implementation deps.activity.appcompat
    // Fragment
    implementation deps.fragment.ktx
    // Android Architecture components
//    implementation deps.lifecycle.extension
    implementation deps.lifecycle.viewmodel
    implementation deps.lifecycle.saved_state
    implementation deps.lifecycle.livedata
    implementation deps.lifecycle.runtime
    implementation 'com.google.firebase:firebase-crashlytics:18.2.6'
    implementation 'com.google.firebase:firebase-analytics:20.0.2'
    kapt deps.lifecycle.compiler
    implementation deps.room.runtime
    implementation deps.room.ktx
    kapt deps.room.compiler
    implementation deps.navigation.fragment
    implementation deps.navigation.ui
    implementation deps.paging.runtime
    implementation deps.work.runtime
    // Firebase components
    implementation platform(deps.firebase.bom)
    implementation deps.firebase.core
    implementation deps.firebase.appindex
    implementation deps.firebase.monitoring
    // Dependency injection
    implementation deps.koin.viewmodel
    // Network components
    implementation deps.coroutines.core
    implementation deps.coroutines.android
    implementation deps.retrofit.core
    implementation deps.retrofit.coroutines
    implementation deps.gson.core
    implementation deps.gson.converter
    implementation deps.okhttp.core
    implementation deps.okhttp.logging
    implementation deps.okhttp.okio
    implementation deps.coil.core
    implementation deps.stetho.core
    implementation deps.stetho.okhttp
    // Utilities
    debugImplementation deps.leak_canary.core
    implementation deps.utilities.timber
    implementation deps.utilities.three_ten_abp
    implementation deps.utilities.sdp
    implementation deps.utilities.circle_image_view
    implementation deps.utilities.ink_page_indicator
    implementation deps.utilities.chrome_custom_tab
    implementation deps.utilities.toasty
    implementation deps.utilities.shape_view
    debugImplementation deps.utilities.debug_db
    // Test
    testImplementation deps.test.junit
    androidTestImplementation deps.androidx.test
    androidTestImplementation deps.androidx.espresso
    testImplementation deps.fragment.test
    testImplementation deps.room.test
    testImplementation deps.androidx.arch_test
    testImplementation deps.paging.test
    testImplementation deps.koin.test
    androidTestImplementation deps.work.test
}
apply plugin: 'com.google.gms.google-services'
